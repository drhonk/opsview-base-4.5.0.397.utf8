#!/bin/sh
# postinst script for opsview-base
#
# see: dh_installdeb(1)
#
# AUTHORS:
#	Copyright (C) 2003-2013 Opsview Limited. All rights reserved
#
#    This file is part of Opsview
#
#    Opsview is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    Opsview is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Opsview; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

set -e

# Include debconf
. /usr/share/debconf/confmodule

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

mysql_root_pw=""

set_perm() {
  # Bit of a pain we have to do this really.
  chown nagios /var/log/mrtg /var/lib/mrtg
}

ssh_setup() {
  # Need ~nagios/.ssh directory
  if ! [ -d ~nagios/.ssh ]; then
    su - nagios -c "mkdir ~nagios/.ssh"
    chmod 700 ~nagios/.ssh
  fi

  if ! [ -e ~nagios/.ssh/id_dsa ]; then
    su - nagios -c "ssh-keygen -q -f ~nagios/.ssh/id_dsa -t dsa -P ''"
    su - nagios -c "cat ~nagios/.ssh/id_dsa.pub >> ~nagios/.ssh/authorized_keys"
    su - nagios -c "ssh localhost -o 'PreferredAuthentications=publickey' -o 'StrictHostKeyChecking no' 'echo'"
  fi

  return 0;
}

move_files() {
    dir=$1
    for copy in $dir/*.copy; do
        # This handles the case where no copy files are found
        test -f $copy || continue
        mib=`echo $copy | sed -e 's/\.copy//'`
        mv $copy $mib || exit 1
    done
}

check_file_moves() {
    if [ -f /usr/local/nagios/snmp/all/mid_process ]; then
        move_files "/usr/local/nagios/snmp/all/" 
        touch /usr/local/nagios/snmp/all/packfile || exit 1
        rm -f /usr/local/nagios/snmp/all/mid_process || exit 1
    fi
}

postinstall() {
    /usr/local/nagios/installer/opsview_base_postinstall
}

case "$1" in
    configure)
      ssh_setup || exit 1
      set_perm || exit 1
      check_file_moves || exit 1
      postinstall || exit 1
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


