diff -ur nagios-3.2.1.original/base/commands.c nagios-3.2.1/base/commands.c
--- nagios-3.2.1.original/base/commands.c	2008-11-30 17:22:58.000000000 +0000
+++ nagios-3.2.1/base/commands.c	2010-05-27 12:24:17.000000000 +0000
@@ -416,6 +416,8 @@
 		command_type=CMD_SCHEDULE_HOST_SVC_DOWNTIME;
 	else if(!strcmp(command_id,"DEL_HOST_DOWNTIME"))
 		command_type=CMD_DEL_HOST_DOWNTIME;
+	else if(!strcmp(command_id,"DEL_HOST_SVC_DOWNTIME"))
+		command_type=CMD_DEL_HOST_SVC_DOWNTIME;
 
 	else if(!strcmp(command_id,"ENABLE_HOST_FLAP_DETECTION"))
 		command_type=CMD_ENABLE_HOST_FLAP_DETECTION;
@@ -503,6 +505,10 @@
 		command_type=CMD_SCHEDULE_HOSTGROUP_HOST_DOWNTIME;
 	else if(!strcmp(command_id,"SCHEDULE_HOSTGROUP_SVC_DOWNTIME"))
 		command_type=CMD_SCHEDULE_HOSTGROUP_SVC_DOWNTIME;
+	else if(!strcmp(command_id,"DEL_HOSTGROUP_HOST_DOWNTIME"))
+		command_type=CMD_DEL_HOSTGROUP_HOST_DOWNTIME;
+	else if(!strcmp(command_id,"DEL_HOSTGROUP_SVC_DOWNTIME"))
+		command_type=CMD_DEL_HOSTGROUP_SVC_DOWNTIME;
 
 
 	/**********************************/
@@ -1070,6 +1076,9 @@
 
 	case CMD_DEL_HOST_DOWNTIME:
 	case CMD_DEL_SVC_DOWNTIME:
+	case CMD_DEL_HOST_SVC_DOWNTIME:
+	case CMD_DEL_HOSTGROUP_HOST_DOWNTIME:
+	case CMD_DEL_HOSTGROUP_SVC_DOWNTIME:
 		cmd_delete_downtime(cmd,args);
 		break;
 
@@ -2572,20 +2581,133 @@
 
 
 
+/* Opsview patch: change some of these cmds, so is distributable */
+/* This function could do with a review as it is probably easier to */
+/* break this into a separate function */
 /* deletes scheduled host or service downtime */
 int cmd_delete_downtime(int cmd, char *args){
 	unsigned long downtime_id=0L;
 	char *temp_ptr=NULL;
+	char *hostgroup_name=NULL;
+	host *temp_host=NULL;
+	hostgroup *temp_hostgroup=NULL;
+	hostsmember *temp_member=NULL;
+	servicesmember *temp_servicesmember=NULL;
+	service *temp_service=NULL;
+	scheduled_downtime *temp_downtime=NULL;
 
-	/* get the id of the downtime to delete */
-	if((temp_ptr=my_strtok(args,"\n"))==NULL)
+	if(cmd==CMD_DEL_HOST_DOWNTIME || cmd==CMD_DEL_HOST_SVC_DOWNTIME) {
+
+		/* get the id of the downtime to delete */
+		temp_ptr=my_strtok(args,"\n");
+		if(temp_ptr==NULL)
+			return ERROR;
+
+		downtime_id=strtoul(temp_ptr,NULL,10);
+		if(downtime_id == 0) {
+			temp_host=find_host(temp_ptr);
+			if(temp_host==NULL)
+				return ERROR;
+			}
+		} 
+
+	else if(cmd==CMD_DEL_SVC_DOWNTIME) {
+        /* get the id of the downtime to delete */
+        temp_ptr=my_strtok(args,";");
+        if(temp_ptr==NULL) {
+            return ERROR;
+        } else {
+            downtime_id=strtoul(temp_ptr,NULL,10);
+            if(downtime_id == 0) {
+                temp_host=find_host(temp_ptr);
+                if(temp_host==NULL)
+                    return ERROR;
+            } 
+        }
+        /* check to see if its specified by names rather than id */
+        temp_ptr=my_strtok(NULL,";");
+        if(temp_ptr != NULL && temp_host == NULL) {
+            return ERROR;
+        } else if(temp_ptr != NULL && temp_host != NULL ) {
+            temp_service=find_service(temp_host->name,temp_ptr);
+            if(temp_service==NULL)
+                return ERROR;
+        }
+
+	} else if(cmd==CMD_DEL_HOSTGROUP_HOST_DOWNTIME || CMD_DEL_HOSTGROUP_SVC_DOWNTIME) {
+
+		/* get the hostgroup name */
+		hostgroup_name=my_strtok(args,";");
+		if(hostgroup_name==NULL)
+			return ERROR;
+
+		/* verify that the hostgroup is valid */
+		temp_hostgroup=find_hostgroup(hostgroup_name);
+		if(temp_hostgroup==NULL)
+			return ERROR;
+
+		}
+
+	else 
 		return ERROR;
-	downtime_id=strtoul(temp_ptr,NULL,10);
 
 	if(cmd==CMD_DEL_HOST_DOWNTIME)
-		unschedule_downtime(HOST_DOWNTIME,downtime_id);
-	else
-		unschedule_downtime(SERVICE_DOWNTIME,downtime_id);
+		if(downtime_id)
+			unschedule_downtime(HOST_DOWNTIME,downtime_id);
+		else if(temp_host != NULL) {
+			while((temp_downtime=find_host_downtime_by_name(temp_host->name)) != NULL) {
+				if (temp_downtime != NULL) {
+					unschedule_downtime(HOST_DOWNTIME,temp_downtime->downtime_id);
+					}
+				}
+			}
+		else
+			return ERROR;
+
+	else if(cmd==CMD_DEL_SVC_DOWNTIME)
+        if(downtime_id) 
+            unschedule_downtime(SERVICE_DOWNTIME,downtime_id);
+        else if(temp_host != NULL && temp_service != NULL) {
+		while((temp_downtime=find_host_service_downtime_by_name(temp_host->name, temp_service->description)) != NULL) {
+			if (temp_downtime != NULL) {
+				unschedule_downtime(SERVICE_DOWNTIME,temp_downtime->downtime_id);
+				}
+			}
+            }
+        else
+            return ERROR;
+
+	else if(cmd==CMD_DEL_HOST_SVC_DOWNTIME) {
+
+		for(temp_service=service_list;temp_service!=NULL;temp_service=temp_service->next){
+			if(!strcmp(temp_service->host_name,temp_host->name)) {
+				while((temp_downtime=find_host_service_downtime_by_name(temp_host->name,temp_service->description))!=NULL) {
+					unschedule_downtime(SERVICE_DOWNTIME,temp_downtime->downtime_id);
+				}
+			}
+		}
+	} else if(cmd==CMD_DEL_HOSTGROUP_HOST_DOWNTIME) {
+
+		for(temp_member=temp_hostgroup->members;temp_member!=NULL;temp_member=temp_member->next) {
+			while((temp_downtime=find_host_downtime_by_name(temp_member->host_name)) != NULL) {
+				unschedule_downtime(HOST_DOWNTIME,temp_downtime->downtime_id);
+			}
+		}
+
+	} else if(cmd==CMD_DEL_HOSTGROUP_SVC_DOWNTIME)
+		for(temp_member=temp_hostgroup->members;temp_member!=NULL;temp_member=temp_member->next){
+			if((temp_host=(host *)temp_member->host_ptr)==NULL)
+				continue;
+			for(temp_servicesmember=temp_host->services;temp_servicesmember!=NULL;temp_servicesmember=temp_servicesmember->next){
+				if((temp_service=temp_servicesmember->service_ptr)==NULL)
+					continue;
+				while((temp_downtime=find_host_service_downtime_by_name(temp_host->name,temp_service->description)) != NULL) {
+					unschedule_downtime(SERVICE_DOWNTIME,temp_downtime->downtime_id);
+				}
+			}
+		}
+	else 
+		return ERROR;
 
 	return OK;
         }
diff -ur nagios-3.2.1.original/common/downtime.c nagios-3.2.1/common/downtime.c
--- nagios-3.2.1.original/common/downtime.c	2010-01-07 01:03:01.000000000 +0000
+++ nagios-3.2.1/common/downtime.c	2010-05-27 12:19:17.000000000 +0000
@@ -1072,3 +1072,31 @@
         }
 
 
+
+/* finds a specific host downtime entry by hostname */
+scheduled_downtime *find_host_downtime_by_name(char *hostname){
+	scheduled_downtime *temp_downtime;
+
+	for(temp_downtime=scheduled_downtime_list;temp_downtime!=NULL;temp_downtime=temp_downtime->next){
+		if(temp_downtime->type!=HOST_DOWNTIME)
+			continue;
+		if(!strcmp(temp_downtime->host_name,hostname))
+			return temp_downtime;
+		
+		}
+	return NULL;
+	}
+
+/* finds all service downtimes on a host by hostname */
+scheduled_downtime *find_host_service_downtime_by_name(char *hostname, char *service_description){
+	scheduled_downtime *temp_downtime;
+
+	for(temp_downtime=scheduled_downtime_list;temp_downtime!=NULL;temp_downtime=temp_downtime->next){
+		if(temp_downtime->type!=SERVICE_DOWNTIME)
+			continue;
+		if(!strcmp(temp_downtime->service_description,service_description) && !strcmp(temp_downtime->host_name,hostname))
+			return temp_downtime;
+		
+		}
+	return NULL;
+	}
diff -ur nagios-3.2.1.original/include/common.h nagios-3.2.1/include/common.h
--- nagios-3.2.1.original/include/common.h	2010-03-09 18:39:59.000000000 +0000
+++ nagios-3.2.1/include/common.h	2010-05-27 12:19:17.000000000 +0000
@@ -302,6 +302,11 @@
 /* custom command introduced in Nagios 3.x */
 #define CMD_CUSTOM_COMMAND                              999
 
+/* Opsview specific commands */
+#define CMD_DEL_HOSTGROUP_HOST_DOWNTIME			300
+#define CMD_DEL_HOSTGROUP_SVC_DOWNTIME			301
+#define CMD_DEL_HOST_SVC_DOWNTIME			302
+
 
 
 /************************ SERVICE CHECK TYPES ****************************/
diff -ur nagios-3.2.1.original/include/downtime.h nagios-3.2.1/include/downtime.h
--- nagios-3.2.1.original/include/downtime.h	2009-12-31 12:42:29.000000000 +0000
+++ nagios-3.2.1/include/downtime.h	2010-05-27 12:29:54.000000000 +0000
@@ -101,6 +101,10 @@
 
 void free_downtime_data(void);                                       /* frees memory allocated to scheduled downtime list */
 
+/* Opsview routines */
+scheduled_downtime *find_host_downtime_by_name(char *);
+scheduled_downtime *find_host_service_downtime_by_name(char *, char *);
+
 #ifdef __cplusplus
   }
 #endif
