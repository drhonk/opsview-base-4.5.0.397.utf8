--- nagiosgraph-0.8.2.original/map	2005-10-26 14:48:44.000000000 +0100
+++ nagiosgraph-0.8.2/map	2006-06-16 14:10:11.229013048 +0100
@@ -35,37 +35,40 @@
 
 # Service type: single disk
 #  output:DISK OK - free space: /tmp 663 MB (90%):
-/output:DISK.*free space: (\S+) (\d+) MB \((\d+)\%\)/
-and push @s, [ $1,
-               [ bytesfree, GAUGE, $2*1024**2 ],
-               [ bytesmax, GAUGE, $3 ? $2*1024**2/$3*100 : 'U' ],
-               [ pctfree, GAUGE, $3 ] ];
+# Handled by perf data
+#/output:DISK.*free space: (\S+) (\d+) MB \((\d+)\%\)/
+#and push @s, [ $1,
+#               [ bytesfree, GAUGE, $2*1024**2 ],
+#               [ bytesmax, GAUGE, $3 ? $2*1024**2/$3*100 : 'U' ],
+#               [ pctfree, GAUGE, $3 ] ];
 
 # Service type: all unix-disk
 # Note: nagiosplugin requires the inode patch
 #   ouput:DISK OK - free space: / 12372 mB (77% inode=96%): /raid 882442 mB (88% inode=91%):
 #   perfdata: /=12372mB;14417;15698;96;16019 /raid=882441mB;999780;999780;91;999780
-/output:DISK.*inode=/ and do {
-  my @_pct = /: (\/.*?) .*?(\d+)% inode=(\d+)%/g;
-  while ( my($_d,$_b,$_i) = splice @_pct,0,3 ) {
-    my @_s;
-    /perfdata:.*$_d=(\d+)\w*?;(\d+);(\d+);(\d+);(\d+)/;
-    push @s, [ $_d,
-               [ free,     GAUGE, $1*1024**2  ],
-               [ user,     GAUGE, $2*1024**2  ],
-               [ root,     GAUGE, $3*1024**2  ],
-               [ max,      GAUGE, $5*1024**2  ],
-               [ blockpct, GAUGE, $_b ],
-               [ inodepct, GAUGE, $_i ] ];
-  }
-};
+# Handled by perf data
+#/output:DISK.*inode=/ and do {
+#  my @_pct = /: (\/.*?) .*?(\d+)% inode=(\d+)%/g;
+#  while ( my($_d,$_b,$_i) = splice @_pct,0,3 ) {
+#    my @_s;
+#    /perfdata:.*$_d=(\d+)\w*?;(\d+);(\d+);(\d+);(\d+)/;
+#    push @s, [ $_d,
+#               [ free,     GAUGE, $1*1024**2  ],
+#               [ user,     GAUGE, $2*1024**2  ],
+#               [ root,     GAUGE, $3*1024**2  ],
+#               [ max,      GAUGE, $5*1024**2  ],
+#               [ blockpct, GAUGE, $_b ],
+#               [ inodepct, GAUGE, $_i ] ];
+#  }
+#};
 
 # Service type: unix-dns
 #   output:DNS OK - 0.008 seconds response time (test.test.1M IN A192.169.0.47)
 #   perfdata:time=8260us;;;0
-/output:DNS.*?([.0-9]+) sec/
-and push @s, [ dns,
-               [ response,  GAUGE, $1 ] ];
+# Handled by perf data
+#/output:DNS.*?([.0-9]+) sec/
+#and push @s, [ dns,
+#               [ response,  GAUGE, $1 ] ];
 
 # Service type: unix-imap
 #   output:IMAP OK - 0.009 second response time on port 143
@@ -83,11 +86,12 @@
 # Service type: unix-load
 #   output: OK - load average: 0.66, 0.70, 0.73
 #   perfdata:load1=0;15;30;0 load5=0;10;25;0 load15=0;5;20;0
-/output:.*load average: ([.0-9]+), ([.0-9]+), ([.0-9]+)/
-and push @s, [ load,
-               [ avg1min,  GAUGE, $1 ],
-               [ avg5min,  GAUGE, $2 ],
-               [ avg15min, GAUGE, $3 ] ];
+# Handled by perf data
+#/output:.*load average: ([.0-9]+), ([.0-9]+), ([.0-9]+)/
+#and push @s, [ load,
+#               [ avg1min,  GAUGE, $1 ],
+#               [ avg5min,  GAUGE, $2 ],
+#               [ avg15min, GAUGE, $3 ] ];
 
 # Service type: unix-mailq
 #   output:WARNING: mailq is 5717 (threshold w = 5000)
@@ -138,9 +142,10 @@
 
 # Service type: unix-smtp
 #   output:SMTP OK - 0.187 sec. response time
-/output:SMTP.*?([-.0-9]+) sec/
-and push @s, [ smtp,
-               [ response, GAUGE, $1 ] ];
+# Handled by perf data
+#/output:SMTP.*?([-.0-9]+) sec/
+#and push @s, [ smtp,
+#               [ response, GAUGE, $1 ] ];
 
 # Service type: unix-swap
 #   output:SWAP OK: 96% free (2616 MB out of 2744 MB)
@@ -155,11 +160,12 @@
 # Service type: unix-users
 #   output:USERS OK - 4 users currently logged in
 #   perfdata:users=4;5;10;0 
-/perfdata:users=(\d+);(\d+);(\d+)/
-and push @s, [ procs,
-               [ users, GAUGE, $1 ],
-               [ uwarn,  GAUGE, $2 ],
-               [ ucrit,  GAUGE, $3 ] ];
+# Handled by perf data
+#/perfdata:users=(\d+);(\d+);(\d+)/
+#and push @s, [ procs,
+#               [ users, GAUGE, $1 ],
+#               [ uwarn,  GAUGE, $2 ],
+#               [ ucrit,  GAUGE, $3 ] ];
 
 # Service type: unix-zombies
 #   ouput:PROCS OK: 0 processes with STATE = Z
@@ -169,17 +175,19 @@
 
 # Service type: unix-www
 #   ouput:HTTP OK HTTP/1.1 200 OK - 1456 bytes in 0.003 seconds
-/output:HTTP.*?(\d+) byte.*?([.0-9]+) sec/
-and push @s, [ http,
-               [ bps, GAUGE, $1/$2 ] ];
+# Handled by perf data
+#/output:HTTP.*?(\d+) byte.*?([.0-9]+) sec/
+#and push @s, [ http,
+#               [ bps, GAUGE, $1/$2 ] ];
 
 # Service type: unix-tcp
 #   output:TCP OK - 0.061 second response time on port 22
 #   perfdata:time=0.060777s;0.000000;0.000000;0.000000;10.000000
-/output:TCP.*?on port (\d+)\s*perfdata:time=(\d+\.\d+).*(\d+\.\d+)\D*(\d+\.\d+)\D*(\d+\.\d+)\D*(\d+\.\d+)/
-and push @s, [ "tcp_$1",
-               [ 'connect_time',   GAUGE, $2 ],
-               [ 'warning_time',   GAUGE, $3 ],
-               [ 'critical_time',  GAUGE, $4 ],
-               [ 'socket_timeout', GAUGE, $6 ],
-             ];
+# Handled by perf data
+#/output:TCP.*?on port (\d+)\s*perfdata:time=(\d+\.\d+).*(\d+\.\d+)\D*(\d+\.\d+)\D*(\d+\.\d+)\D*(\d+\.\d+)/
+#and push @s, [ "tcp_$1",
+#               [ 'connect_time',   GAUGE, $2 ],
+#               [ 'warning_time',   GAUGE, $3 ],
+#               [ 'critical_time',  GAUGE, $4 ],
+#               [ 'socket_timeout', GAUGE, $6 ],
+#             ];
--- nagiosgraph-0.8.2.original/insert.pl	2006-06-14 13:14:46.000000000 +0100
+++ nagiosgraph-0.8.2/insert.pl	2006-06-14 14:37:35.686611880 +0100
@@ -7,6 +7,7 @@
 
 use strict;
 use RRDs;
+use Nagios::Plugin::Performance;
 
 # Configuration
 my $configfile = '/usr/local/nagios/etc/nagiosgraph.conf';
@@ -138,7 +139,24 @@
   my %P = @_;
 
   $_="servicedescr:$P{servicedescr}\noutput:$P{output}\nperfdata:$P{perfdata}";
-  evalrules($_);
+  my $s = evalrules($_);
+  if (@$s) {
+	return $s;
+  } else {
+	my @a = Nagios::Plugin::Performance->parse_perfstring($P{perfdata});
+	if (@a) {
+		my @graphs = ();
+		foreach my $a (@a) {
+			my $label = $a->rrdlabel;
+			push @graphs, [ $label, "GAUGE", $a->value ];
+			my $shorter_label = substr($label, 0, 14);
+			push @graphs, [ $shorter_label."_warn", "GAUGE", $a->threshold->warning->end ] if ($a->threshold->warning->is_set);
+			push @graphs, [ $shorter_label."_crit", "GAUGE", $a->threshold->critical->end ] if ($a->threshold->critical->is_set);
+		}
+		push @$s, [ "", @graphs ];
+	}
+	return $s;
+  }
 }
 
 # Check that we have some data to work on
--- nagiosgraph-0.8.2.original/show.cgi	2006-06-15 10:59:03.038428631 +0100
+++ nagiosgraph-0.8.2/show.cgi	2006-06-15 10:53:23.966840595 +0100
@@ -81,7 +81,7 @@
   my $hs = urlencode "${host}_${service}";
   my @rrd;
   opendir DH, $Config{rrddir};
-    @rrd = grep s/^${hs}_(.+)\.rrd$/$1/, readdir DH;
+    @rrd = grep s/^${hs}_(.*)\.rrd$/$1/, readdir DH;	# If using perf data to parse, no db name added
   closedir DH;
   return @rrd;
 }
