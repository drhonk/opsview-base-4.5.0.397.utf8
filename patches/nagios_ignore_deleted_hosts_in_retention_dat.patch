diff -ur nagios-4.0.20130912/xdata/xrddefault.c nagios-4.0.20130912.dt_host//xdata/xrddefault.c
--- nagios-4.0.20130912/xdata/xrddefault.c	2013-09-25 13:18:22.000000000 +0100
+++ nagios-4.0.20130912.dt_host//xdata/xrddefault.c	2013-09-25 13:16:57.000000000 +0100
@@ -35,6 +35,74 @@
 #include "xrddefault.h"
 
 
+typedef struct downtime_hosts {
+    char *host_name;
+    struct downtime_hosts *next;
+} downtime_hosts;
+
+struct downtime_hosts *dt_host_head = NULL;
+struct downtime_hosts *dt_host_curr = NULL;
+
+
+struct downtime_hosts *create_dt_host_list(char *host_name) {
+    struct downtime_hosts *ptr = (struct downtime_hosts *)malloc(sizeof(struct downtime_hosts));
+    if ( ptr == NULL ) {
+        logit(NSLOG_RUNTIME_ERROR, TRUE, "Error: Cannot allocate memory for hosts in downtime!\n");
+        return NULL;
+    }
+    ptr->host_name = host_name;
+    ptr->next = NULL;
+
+    dt_host_head = dt_host_curr = ptr;
+
+    return dt_host_head;
+}
+
+struct downtime_hosts *add_dt_host(char *host_name) {
+    if ( dt_host_head == NULL ) {
+        return create_dt_host_list(host_name);
+    };
+
+    struct downtime_hosts *ptr = (struct downtime_hosts *)malloc(sizeof(struct downtime_hosts));
+    if ( ptr == NULL ) {
+        logit(NSLOG_RUNTIME_ERROR, TRUE, "Error: Cannot allocate memory for hosts in downtime node!\n");
+        return NULL;
+    }
+
+    ptr->host_name = host_name;
+    ptr->next = NULL;
+
+    dt_host_curr->next = ptr;
+    dt_host_curr = ptr;
+
+    return ptr;
+}
+
+int find_dt_host(const char *host_name) {
+    struct downtime_hosts *ptr = dt_host_head;
+
+    while ( ptr != NULL ) {
+        if (strcmp(ptr->host_name, host_name) == 0) {
+            return 1;
+        }
+        ptr = ptr->next;
+    }
+
+    return 0;
+}
+
+void free_dt_host_list(void) {
+    struct downtime_hosts *this = NULL;
+    struct downtime_hosts *next = NULL;
+
+    for ( this = dt_host_head; this != NULL; this = next ) {
+        next = this->next;
+        free(this);
+    }
+    dt_host_head = NULL;
+}
+
+
 /******************************************************************/
 /********************* INIT/CLEANUP FUNCTIONS *********************/
 /******************************************************************/
@@ -186,9 +254,53 @@
 	fprintf(fp, "next_notification_id=%lu\n", next_notification_id);
 	fprintf(fp, "}\n");
 
+	/* save all downtime */
+	for(temp_downtime = scheduled_downtime_list; temp_downtime != NULL; temp_downtime = temp_downtime->next) {
+        /* save a list of deleted hosts */
+        if ( strstr(temp_downtime->comment, "Host pending deletion") != NULL ) {
+            if ( temp_downtime->type == HOST_DOWNTIME ) {
+                add_dt_host(temp_downtime->host_name);
+            }
+		}
+    }
+
+   for(temp_downtime = scheduled_downtime_list; temp_downtime != NULL; temp_downtime = temp_downtime->next) {
+
+        if ( find_dt_host(temp_downtime->host_name) ) {
+            continue;
+        }
+
+		if(temp_downtime->type == HOST_DOWNTIME)
+			fprintf(fp, "hostdowntime {\n");
+		else
+			fprintf(fp, "servicedowntime {\n");
+		fprintf(fp, "host_name=%s\n", temp_downtime->host_name);
+		if(temp_downtime->type == SERVICE_DOWNTIME)
+			fprintf(fp, "service_description=%s\n", temp_downtime->service_description);
+		fprintf(fp, "comment_id=%lu\n", temp_downtime->comment_id);
+		fprintf(fp, "downtime_id=%lu\n", temp_downtime->downtime_id);
+		fprintf(fp, "entry_time=%lu\n", temp_downtime->entry_time);
+		fprintf(fp, "start_time=%lu\n", temp_downtime->start_time);
+		fprintf(fp, "flex_downtime_start=%lu\n", temp_downtime->flex_downtime_start);
+		fprintf(fp, "end_time=%lu\n", temp_downtime->end_time);
+		fprintf(fp, "triggered_by=%lu\n", temp_downtime->triggered_by);
+		fprintf(fp, "fixed=%d\n", temp_downtime->fixed);
+		fprintf(fp, "duration=%lu\n", temp_downtime->duration);
+		fprintf(fp, "is_in_effect=%d\n", temp_downtime->is_in_effect);
+		fprintf(fp, "start_notification_sent=%d\n", temp_downtime->start_notification_sent);
+		fprintf(fp, "author=%s\n", temp_downtime->author);
+		fprintf(fp, "comment=%s\n", temp_downtime->comment);
+		fprintf(fp, "}\n");
+    }
+
+
 	/* save host state information */
 	for(temp_host = host_list; temp_host != NULL; temp_host = temp_host->next) {
 
+        if ( temp_host->scheduled_downtime_depth && find_dt_host(temp_host->name) ) {
+            continue;
+        }
+
 		fprintf(fp, "host {\n");
 		fprintf(fp, "host_name=%s\n", temp_host->name);
 		fprintf(fp, "modified_attributes=%lu\n", (temp_host->modified_attributes & ~host_attribute_mask));
@@ -264,6 +376,10 @@
 	/* save service state information */
 	for(temp_service = service_list; temp_service != NULL; temp_service = temp_service->next) {
 
+        if ( temp_service->scheduled_downtime_depth && find_dt_host(temp_service->host_name) ) {
+            continue;
+        }
+
 		fprintf(fp, "service {\n");
 		fprintf(fp, "host_name=%s\n", temp_service->host_name);
 		fprintf(fp, "service_description=%s\n", temp_service->description);
@@ -363,6 +479,9 @@
 
 	/* save all comments */
 	for(temp_comment = comment_list; temp_comment != NULL; temp_comment = temp_comment->next) {
+        if ( find_dt_host(temp_comment->host_name) ) {
+            continue;
+        }
 
 		if(temp_comment->comment_type == HOST_COMMENT)
 			fprintf(fp, "hostcomment {\n");
@@ -383,36 +502,12 @@
 		fprintf(fp, "}\n");
 		}
 
-	/* save all downtime */
-	for(temp_downtime = scheduled_downtime_list; temp_downtime != NULL; temp_downtime = temp_downtime->next) {
-
-		if(temp_downtime->type == HOST_DOWNTIME)
-			fprintf(fp, "hostdowntime {\n");
-		else
-			fprintf(fp, "servicedowntime {\n");
-		fprintf(fp, "host_name=%s\n", temp_downtime->host_name);
-		if(temp_downtime->type == SERVICE_DOWNTIME)
-			fprintf(fp, "service_description=%s\n", temp_downtime->service_description);
-		fprintf(fp, "comment_id=%lu\n", temp_downtime->comment_id);
-		fprintf(fp, "downtime_id=%lu\n", temp_downtime->downtime_id);
-		fprintf(fp, "entry_time=%lu\n", temp_downtime->entry_time);
-		fprintf(fp, "start_time=%lu\n", temp_downtime->start_time);
-		fprintf(fp, "flex_downtime_start=%lu\n", temp_downtime->flex_downtime_start);
-		fprintf(fp, "end_time=%lu\n", temp_downtime->end_time);
-		fprintf(fp, "triggered_by=%lu\n", temp_downtime->triggered_by);
-		fprintf(fp, "fixed=%d\n", temp_downtime->fixed);
-		fprintf(fp, "duration=%lu\n", temp_downtime->duration);
-		fprintf(fp, "is_in_effect=%d\n", temp_downtime->is_in_effect);
-		fprintf(fp, "start_notification_sent=%d\n", temp_downtime->start_notification_sent);
-		fprintf(fp, "author=%s\n", temp_downtime->author);
-		fprintf(fp, "comment=%s\n", temp_downtime->comment);
-		fprintf(fp, "}\n");
-		}
-
 	fflush(fp);
 	fsync(fd);
 	result = fclose(fp);
 
+    free_dt_host_list();
+
 	/* save/close was successful */
 	if(result == 0) {
 
